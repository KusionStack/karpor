definitions:
  aggregator.DiagnoseRequest:
    properties:
      language:
        description: Language code for AI response
        type: string
      logs:
        items:
          type: string
        type: array
    type: object
  aggregator.EventDiagnoseRequest:
    properties:
      events:
        items:
          $ref: '#/definitions/ai.Event'
        type: array
      language:
        type: string
    type: object
  aggregator.LogEntry:
    properties:
      content:
        type: string
      error:
        type: string
      timestamp:
        type: string
    type: object
  ai.AuditData:
    properties:
      bySeverity:
        additionalProperties:
          type: integer
        type: object
      issueGroups:
        items:
          $ref: '#/definitions/ai.IssueGroup'
        type: array
      issueTotal:
        type: integer
      resourceTotal:
        type: integer
    type: object
  ai.DiagnosisEvent:
    properties:
      content:
        description: Event content
        type: string
      type:
        description: 'Event type: start/chunk/error/complete'
        type: string
    type: object
  ai.Event:
    properties:
      count:
        type: integer
      firstTimestamp:
        type: string
      lastTimestamp:
        type: string
      message:
        type: string
      reason:
        type: string
      type:
        type: string
    type: object
  ai.InterpretEvent:
    properties:
      content:
        description: Event content or error message
        type: string
      type:
        description: 'Event type: start, chunk, error, complete'
        type: string
    type: object
  ai.IssueGroup:
    properties:
      issue:
        $ref: '#/definitions/scanner.Issue'
      resourceGroups:
        items:
          $ref: '#/definitions/entity.ResourceGroup'
        type: array
    type: object
  cluster.ClusterPayload:
    properties:
      description:
        description: ClusterDescription is the description of cluster to be created
        type: string
      displayName:
        description: ClusterDisplayName is the display name of cluster to be created
        type: string
      kubeConfig:
        description: ClusterKubeConfig is the kubeconfig of cluster to be created
        type: string
    type: object
  cluster.UploadData:
    properties:
      content:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
      sanitizedClusterContent:
        type: string
    type: object
  cluster.ValidatePayload:
    properties:
      kubeConfig:
        type: string
    type: object
  detail.InterpretRequest:
    properties:
      language:
        type: string
      yaml:
        type: string
    type: object
  entity.ResourceGroup:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      apiVersion:
        type: string
      cluster:
        type: string
      kind:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
    type: object
  insight.ResourceSummary:
    properties:
      creationTimestamp:
        type: string
      resource:
        $ref: '#/definitions/entity.ResourceGroup'
      resourceVersion:
        type: string
      uid:
        type: string
    type: object
  insight.ResourceTopology:
    properties:
      children:
        items:
          type: string
        type: array
      parents:
        items:
          type: string
        type: array
      resourceGroup:
        $ref: '#/definitions/entity.ResourceGroup'
    type: object
  insight.ScoreData:
    properties:
      issuesTotal:
        description: |-
          IssuesTotal is the total count of all issues found during the audit.
          This count can be used to understand the overall number of problems
          that need to be addressed.
        type: integer
      resourceTotal:
        description: ResourceTotal is the count of unique resources audited during
          the scan.
        type: integer
      score:
        description: |-
          Score represents the calculated score of the audited manifest based on
          the number and severity of issues. It provides a quantitative measure
          of the security posture of the resources in the manifest.
        type: number
      severityStatistic:
        additionalProperties:
          type: integer
        description: |-
          SeverityStatistic is a mapping of severity levels to their respective
          number of occurrences. It allows for a quick overview of the distribution
          of issues across different severity categories.
        type: object
    type: object
  insight.Statistics:
    properties:
      clusterCount:
        type: integer
      resourceCount:
        type: integer
      resourceGroupRuleCount:
        type: integer
    type: object
  resourcegrouprule.ResourceGroupRulePayload:
    properties:
      description:
        type: string
      fields:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  scanner.InterpretRequest:
    properties:
      auditData:
        $ref: '#/definitions/ai.AuditData'
        description: The audit data to interpret
      language:
        description: Language for interpretation
        type: string
    type: object
  scanner.Issue:
    properties:
      message:
        description: Message provides a detailed human-readable description of the
          issue.
        type: string
      scanner:
        description: Scanner is the name of the scanner that discovered the issue.
        type: string
      severity:
        description: Severity indicates how critical the issue is, using the IssueSeverityLevel
          constants.
        type: integer
      title:
        description: Title is a brief summary of the issue.
        type: string
    type: object
  unstructured.Unstructured:
    properties:
      object:
        additionalProperties: true
        description: |-
          Object is a JSON compatible map with string, float, int, bool, []interface{}, or
          map[string]interface{}
          children.
        type: object
    type: object
info:
  contact: {}
  description: Karpor is a brand new Kubernetes visualization tool that focuses on
    search, insights, and AI at its core
  title: Karpor
  version: "1.0"
paths:
  /authn:
    get:
      description: This endpoint returns an authn result.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns an authn result of user's token.
      tags:
      - authn
  /endpoints:
    get:
      consumes:
      - text/plain
      description: List all registered endpoints in the router
      produces:
      - text/plain
      responses:
        "200":
          description: Endpoints listed successfully
          schema:
            type: string
      summary: List all available endpoints
      tags:
      - debug
  /insight/aggregator/event/{cluster}/{namespace}/{name}:
    get:
      description: This endpoint streams resource events in real-time using SSE. It
        supports event type filtering and automatic updates.
      parameters:
      - description: The cluster name
        in: path
        name: cluster
        required: true
        type: string
      - description: The namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: The resource name
        in: path
        name: name
        required: true
        type: string
      - description: The resource kind
        in: query
        name: kind
        required: true
        type: string
      - description: The resource API version
        in: query
        name: apiVersion
        required: true
        type: string
      - description: Event type filter (Normal or Warning)
        in: query
        name: type
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ai.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Stream resource events using Server-Sent Events
      tags:
      - insight
  /insight/aggregator/event/diagnosis/stream:
    post:
      consumes:
      - application/json
      description: This endpoint analyzes events using AI to identify issues and provide
        solutions
      parameters:
      - description: The events to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aggregator.EventDiagnoseRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ai.DiagnosisEvent'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Diagnose events using AI
      tags:
      - insight
  /insight/aggregator/log/diagnosis/stream:
    post:
      consumes:
      - application/json
      description: This endpoint analyzes pod logs using AI to identify issues and
        provide solutions
      parameters:
      - description: The logs to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aggregator.DiagnoseRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ai.DiagnosisEvent'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Diagnose pod logs using AI
      tags:
      - insight
  /insight/aggregator/log/pod/{cluster}/{namespace}/{name}:
    get:
      description: This endpoint streams pod logs in real-time using SSE. It supports
        container selection and automatic reconnection.
      parameters:
      - description: The cluster name
        in: path
        name: cluster
        required: true
        type: string
      - description: The namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: The pod name
        in: path
        name: name
        required: true
        type: string
      - description: The container name (optional if pod has only one container)
        in: query
        name: container
        type: string
      - description: Only return logs newer than a relative duration like 5s, 2m,
          or 3h
        in: query
        name: since
        type: string
      - description: Only return logs after a specific date (RFC3339)
        in: query
        name: sinceTime
        type: string
      - description: Include timestamps in log output
        in: query
        name: timestamps
        type: boolean
      - description: Number of lines from the end of the logs to show
        in: query
        name: tailLines
        type: integer
      - description: Download logs as file instead of streaming
        in: query
        name: download
        type: boolean
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aggregator.LogEntry'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Stream pod logs using Server-Sent Events
      tags:
      - insight
  /insight/issue/interpret/stream:
    post:
      consumes:
      - application/json
      description: This endpoint analyzes scanner issues using AI to provide detailed
        interpretation and insights
      parameters:
      - description: The audit data to interpret
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/scanner.InterpretRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ai.InterpretEvent'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Interpret scanner issues using AI
      tags:
      - insight
  /insight/yaml/interpret/stream:
    post:
      consumes:
      - application/json
      description: This endpoint analyzes YAML content using AI to provide detailed
        interpretation and insights
      parameters:
      - description: The YAML content to interpret
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/detail.InterpretRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ai.InterpretEvent'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Interpret YAML using AI
      tags:
      - insight
  /rest-api/v1/cluster/{clusterName}:
    delete:
      description: This endpoint deletes the cluster resource by name.
      parameters:
      - description: The name of the cluster
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete removes a cluster resource by name.
      tags:
      - cluster
    get:
      description: This endpoint returns a cluster resource by name.
      parameters:
      - description: The name of the cluster
        in: path
        name: clusterName
        required: true
        type: string
      - description: The format of the response. Either in json or yaml
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a cluster resource by name.
      tags:
      - cluster
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint creates a new cluster resource using the payload.
      parameters:
      - description: cluster to create (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.ClusterPayload'
      - description: The name of the cluster
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create creates a cluster resource.
      tags:
      - cluster
    put:
      consumes:
      - text/plain
      - application/json
      description: This endpoint updates the display name and description of an existing
        cluster resource.
      parameters:
      - description: cluster to update (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.ClusterPayload'
      - description: The name of the cluster
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update updates the cluster metadata by name.
      tags:
      - cluster
  /rest-api/v1/cluster/config/file:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a KubeConfig file for cluster, with a maximum size of 2MB.
      parameters:
      - description: Upload file with field name 'file'
        in: formData
        name: file
        required: true
        type: file
      - description: cluster name
        in: formData
        name: name
        required: true
        type: string
      - description: cluster display name
        in: formData
        name: displayName
        required: true
        type: string
      - description: cluster description
        in: formData
        name: description
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Returns the content of the uploaded KubeConfig file.
          schema:
            $ref: '#/definitions/cluster.UploadData'
        "400":
          description: The uploaded file is too large or the request is invalid.
          schema:
            type: string
        "500":
          description: Internal server error.
          schema:
            type: string
      summary: Upload kubeConfig file for cluster
      tags:
      - cluster
  /rest-api/v1/cluster/config/validate:
    post:
      consumes:
      - text/plain
      - application/json
      description: Validates the provided KubeConfig using cluster manager methods.
      parameters:
      - description: KubeConfig payload to validate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.ValidatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Verification passed server version
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Validate KubeConfig
      tags:
      - cluster
  /rest-api/v1/clusters:
    get:
      description: This endpoint lists all cluster resources.
      parameters:
      - description: Whether to display summary or not. Default to false
        in: query
        name: summary
        type: boolean
      - description: The order to list the cluster. Default to order by name
        in: query
        name: orderBy
        type: string
      - description: Whether to sort the list in descending order. Default to false
        in: query
        name: descending
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of cluster objects
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List lists all cluster resources.
      tags:
      - cluster
  /rest-api/v1/insight/audit:
    get:
      description: This endpoint audits based on the specified resource group.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      - description: Switch for forced scanning, default is 'false'
        in: query
        name: forceNew
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Audit results
          schema:
            $ref: '#/definitions/ai.AuditData'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Audit based on resource group.
      tags:
      - insight
  /rest-api/v1/insight/detail:
    get:
      description: This endpoint returns a Kubernetes resource by name, namespace,
        cluster, apiVersion and kind.
      parameters:
      - description: The format of the response. Either in json or yaml. Default to
          json
        in: query
        name: format
        type: string
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetDetail returns a Kubernetes resource by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - insight
  /rest-api/v1/insight/events:
    get:
      description: This endpoint returns events for a Kubernetes resource YAML by
        name, namespace, cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of events
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetEvents returns events for a Kubernetes resource by name, namespace,
        cluster, apiVersion and kind.
      tags:
      - insight
  /rest-api/v1/insight/score:
    get:
      description: This endpoint calculates a score for the provided manifest based
        on the number and severity of issues detected during the audit.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      - description: Switch for forced compute score, default is 'false'
        in: query
        name: forceNew
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Score calculation result
          schema:
            $ref: '#/definitions/insight.ScoreData'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: ScoreHandler calculates a score for the audited manifest.
      tags:
      - insight
  /rest-api/v1/insight/stats:
    get:
      description: This endpoint returns a global statistics info.
      produces:
      - application/json
      responses:
        "200":
          description: Global statistics info
          schema:
            $ref: '#/definitions/insight.Statistics'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a global statistics info.
      tags:
      - insight
  /rest-api/v1/insight/summary:
    get:
      description: This endpoint returns a Kubernetes resource summary by name, namespace,
        cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resource Summary
          schema:
            $ref: '#/definitions/insight.ResourceSummary'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a Kubernetes resource summary by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - insight
  /rest-api/v1/insight/topology:
    get:
      description: This endpoint returns a topology map for a Kubernetes resource
        by name, namespace, cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      - description: Force re-generating the topology, default is 'false'
        in: query
        name: forceNew
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: map from string to resource.ResourceTopology
          schema:
            additionalProperties:
              additionalProperties:
                $ref: '#/definitions/insight.ResourceTopology'
              type: object
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetTopology returns a topology map for a Kubernetes resource by name,
        namespace, cluster, apiVersion and kind.
      tags:
      - insight
  /rest-api/v1/resource-group-rule:
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint creates a new ResourceGroupRule using the payload.
      parameters:
      - description: resourceGroupRule to create (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resourcegrouprule.ResourceGroupRulePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create creates a ResourceGroupRule.
      tags:
      - resourcegrouprule
    put:
      consumes:
      - text/plain
      - application/json
      description: This endpoint updates the display name and description of an existing
        ResourceGroupRule.
      parameters:
      - description: resourceGroupRule to update (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resourcegrouprule.ResourceGroupRulePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update updates the ResourceGroupRule metadata by name.
      tags:
      - resourcegrouprule
  /rest-api/v1/resource-group-rule/{resourceGroupRuleName}:
    delete:
      description: This endpoint deletes the ResourceGroupRule by name.
      parameters:
      - description: The name of the resource group rule
        in: path
        name: resourceGroupRuleName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete removes a ResourceGroupRule by name.
      tags:
      - resourcegrouprule
    get:
      description: This endpoint returns a ResourceGroupRule by name.
      parameters:
      - description: The name of the resource group rule
        in: path
        name: resourceGroupRuleName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a ResourceGroupRule by name.
      tags:
      - resourcegrouprule
  /rest-api/v1/resource-group-rules:
    get:
      description: This endpoint lists all ResourceGroupRules.
      parameters:
      - description: Whether to display summary or not. Default to false
        in: query
        name: summary
        type: boolean
      - description: The order to list the resourceGroupRule. Default to order by
          name
        in: query
        name: orderBy
        type: string
      - description: Whether to sort the list in descending order. Default to false
        in: query
        name: descending
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of resourceGroupRule objects
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List lists all ResourceGroupRules.
      tags:
      - resourcegrouprule
  /rest-api/v1/resource-groups/{resourceGroupRuleName}:
    get:
      description: This endpoint lists all ResourceGroups.
      parameters:
      - description: The name of the resource group rule
        in: path
        name: resourceGroupRuleName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of resourceGroup objects
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List lists all ResourceGroups by rule name.
      tags:
      - resourcegroup
  /rest-api/v1/search:
    get:
      description: This endpoint returns an array of Kubernetes runtime Object matched
        using the query from context.
      parameters:
      - description: The query to use for search. Required
        in: query
        name: query
        required: true
        type: string
      - description: The search pattern. Can be either sql, dsl or nl. Required
        in: query
        name: pattern
        required: true
        type: string
      - description: The size of the page. Default to 10
        in: query
        name: pageSize
        type: string
      - description: The current page to fetch. Default to 1
        in: query
        name: page
        type: string
      - description: The keyword to use for search. Optional
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Array of runtime.Object
          schema:
            items: {}
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: SearchForResource returns an array of Kubernetes runtime Object matched
        using the query from context.
      tags:
      - search
  /server-configs:
    get:
      description: Returns server configuration
      produces:
      - application/json
      responses:
        "200":
          description: Server configurations
          schema:
            additionalProperties: true
            type: object
      summary: Get server configurations
      tags:
      - debug
swagger: "2.0"
