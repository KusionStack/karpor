definitions:
  github_com_KusionStack_karbour_pkg_core.Locator:
    properties:
      apiVersion:
        type: string
      cluster:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_audit.ScoreData:
    properties:
      issuesTotal:
        description: |-
          IssuesTotal is the total count of all issues found during the audit.
          This count can be used to understand the overall number of problems
          that need to be addressed.
        type: integer
      score:
        description: |-
          Score represents the calculated score of the audited manifest based on
          the number and severity of issues. It provides a quantitative measure
          of the security posture of the resources in the manifest.
        type: number
      severityStatistic:
        additionalProperties:
          type: integer
        description: |-
          SeverityStatistic is a mapping of severity levels to their respective
          number of occurrences. It allows for a quick overview of the distribution
          of issues across different severity categories.
        type: object
      severitySum:
        description: |-
          SeveritySum is the sum of severity scores of all issues, which can be
          used to gauge the cumulative severity of all problems found.
        type: integer
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceSummary:
    properties:
      creationTimestamp:
        type: string
      resource:
        $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core.Locator'
      resourceVersion:
        type: string
      uid:
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceTopology:
    properties:
      children:
        items:
          type: string
        type: array
      identifier:
        type: string
      parents:
        items:
          type: string
        type: array
    type: object
  github_com_KusionStack_karbour_pkg_scanner.Issue:
    properties:
      message:
        description: Message provides a detailed human-readable description of the
          issue.
        type: string
      scanner:
        description: Scanner is the name of the scanner that discovered the issue.
        type: string
      severity:
        allOf:
        - $ref: '#/definitions/github_com_KusionStack_karbour_pkg_scanner.IssueSeverityLevel'
        description: Severity indicates how critical the issue is, using the IssueSeverityLevel
          constants.
      title:
        description: Title is a brief summary of the issue.
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_scanner.IssueSeverityLevel:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 5
    type: integer
    x-enum-comments:
      Critical: Critical indicates an extremely serious issue that must be addressed
        immediately.
      High: High indicates a serious issue that has a significant impact.
      Low: Low indicates a minor issue that should be addressed.
      Medium: Medium indicates a potential issue that may have a moderate impact.
      Safe: Safe indicates the absence of any security risk or an informational finding
        that does not require action.
    x-enum-varnames:
    - Safe
    - Low
    - Medium
    - High
    - Critical
  pkg_core_handler_audit.AuditData:
    properties:
      bySeverity:
        additionalProperties:
          type: integer
        type: object
      issueGroups:
        items:
          $ref: '#/definitions/pkg_core_handler_audit.IssueGroup'
        type: array
      issueTotal:
        type: integer
      resourceTotal:
        type: integer
    type: object
  pkg_core_handler_audit.IssueGroup:
    properties:
      issue:
        $ref: '#/definitions/github_com_KusionStack_karbour_pkg_scanner.Issue'
      locators:
        items:
          $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core.Locator'
        type: array
    type: object
  pkg_core_handler_cluster.ClusterPayload:
    properties:
      description:
        description: ClusterDescription is the description of cluster to be created
        type: string
      displayName:
        description: ClusterDisplayName is the display name of cluster to be created
        type: string
      kubeconfig:
        description: ClusterKubeConfig is the kubeconfig of cluster to be created
        type: string
    type: object
  pkg_core_handler_cluster.UploadData:
    properties:
      content:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
    type: object
  pkg_core_handler_cluster.ValidatePayload:
    properties:
      kubeConfig:
        type: string
    type: object
  unstructured.Unstructured:
    properties:
      object:
        additionalProperties: true
        description: |-
          Object is a JSON compatible map with string, float, int, bool, []interface{}, or
          map[string]interface{}
          children.
        type: object
    type: object
info:
  contact: {}
paths:
  /api/v1/cluster/{clusterName}:
    delete:
      description: This endpoint deletes the cluster resource by name.
      produces:
      - application/json
      responses:
        "200":
          description: Operation status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete removes a cluster resource by name.
      tags:
      - cluster
    get:
      description: This endpoint returns a cluster resource by name.
      parameters:
      - description: The format of the response. Either in json or yaml
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a cluster resource by name.
      tags:
      - cluster
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint creates a new cluster resource using the payload.
      parameters:
      - description: cluster to create (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ClusterPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create creates a cluster resource.
      tags:
      - cluster
    put:
      consumes:
      - text/plain
      - application/json
      description: This endpoint updates the display name and description of an existing
        cluster resource.
      parameters:
      - description: cluster to update (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ClusterPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: UpdateMetadata updates the cluster metadata by name.
      tags:
      - cluster
  /api/v1/cluster/config/file:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a KubeConfig file for cluster, with a maximum size of 2MB,
        and the valid file extension is "", ".yaml", ".yml", ".json", ".kubeconfig",
        ".kubeconf".
      parameters:
      - description: Upload file with field name 'file'
        in: formData
        name: file
        required: true
        type: file
      produces:
      - text/plain
      responses:
        "200":
          description: Returns the content of the uploaded KubeConfig file.
          schema:
            $ref: '#/definitions/pkg_core_handler_cluster.UploadData'
        "400":
          description: The uploaded file is too large or the request is invalid.
          schema:
            type: string
        "500":
          description: Internal server error.
          schema:
            type: string
      summary: Upload kubeConfig file for cluster
      tags:
      - cluster
  /api/v1/cluster/config/validate:
    post:
      consumes:
      - text/plain
      - application/json
      description: Validates the provided KubeConfig using cluster manager methods.
      parameters:
      - description: KubeConfig payload to validate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ValidatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Verification passed server version
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Validate KubeConfig
      tags:
      - cluster
  /api/v1/clusters:
    get:
      description: This endpoint lists all cluster resources.
      parameters:
      - description: Whether to display summary or not. Default to false
        in: query
        name: summary
        type: boolean
      - description: The order to list the cluster. Default to order by name
        in: query
        name: orderBy
        type: string
      - description: Whether to sort the list in descending order. Default to false
        in: query
        name: descending
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of cluster objects
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List lists all cluster resources.
      tags:
      - cluster
  /api/v1/insight/audit:
    get:
      description: This endpoint audits based on the specified locator.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Audit results
          schema:
            $ref: '#/definitions/pkg_core_handler_audit.AuditData'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Audit based on locator.
      tags:
      - insight
  /api/v1/insight/detail:
    get:
      description: This endpoint returns a Kubernetes resource by name, namespace,
        cluster, apiVersion and kind.
      parameters:
      - description: The format of the response. Either in json or yaml. Default to
          json
        in: query
        name: format
        type: string
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetDetail returns a Kubernetes resource by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - insight
  /api/v1/insight/events:
    get:
      description: This endpoint returns events for a Kubernetes resource YAML by
        name, namespace, cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of events
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetEvents returns events for a Kubernetes resource by name, namespace,
        cluster, apiVersion and kind.
      tags:
      - insight
  /api/v1/insight/score:
    get:
      description: This endpoint calculates a score for the provided manifest based
        on the number and severity of issues detected during the audit.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Score calculation result
          schema:
            $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_audit.ScoreData'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: ScoreHandler calculates a score for the audited manifest.
      tags:
      - insight
  /api/v1/insight/summary:
    get:
      description: This endpoint returns a Kubernetes resource summary by name, namespace,
        cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resource Summary
          schema:
            $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceSummary'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a Kubernetes resource summary by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - insight
  /api/v1/insight/topology:
    get:
      description: This endpoint returns a topology map for a Kubernetes resource
        by name, namespace, cluster, apiVersion and kind.
      parameters:
      - description: The specified cluster name, such as 'example-cluster'
        in: query
        name: cluster
        type: string
      - description: The specified apiVersion, such as 'apps/v1'. Should be percent-encoded
        in: query
        name: apiVersion
        type: string
      - description: The specified kind, such as 'Deployment'
        in: query
        name: kind
        type: string
      - description: The specified namespace, such as 'default'
        in: query
        name: namespace
        type: string
      - description: The specified resource name, such as 'foo'
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: map from string to resource.ResourceTopology
          schema:
            additionalProperties:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceTopology'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetTopology returns a topology map for a Kubernetes resource by name,
        namespace, cluster, apiVersion and kind.
      tags:
      - insight
  /api/v1/search:
    get:
      description: This endpoint returns an array of Kubernetes runtime Object matched
        using the query from context.
      parameters:
      - description: The query to use for search. Required
        in: query
        name: query
        required: true
        type: string
      - description: The search pattern. Can be either sql or dsl. Required
        in: query
        name: pattern
        required: true
        type: string
      - description: The size of the page. Default to 10
        in: query
        name: pageSize
        type: string
      - description: The current page to fetch. Default to 1
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Array of runtime.Object
          schema:
            items: {}
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: SearchForResource returns an array of Kubernetes runtime Object matched
        using the query from context.
      tags:
      - search
swagger: "2.0"
