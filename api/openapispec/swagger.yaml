definitions:
  github_com_KusionStack_karbour_pkg_core_manager_audit.AuditData:
    properties:
      aggregated:
        additionalProperties:
          type: integer
        type: object
      issues:
        items:
          $ref: '#/definitions/github_com_KusionStack_karbour_pkg_scanner.Issue'
        type: array
      resourcesTotal:
        type: integer
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_audit.ScoreData:
    properties:
      issuesTotal:
        description: |-
          IssuesTotal is the total count of all issues found during the audit.
          This count can be used to understand the overall number of problems
          that need to be addressed.
        type: integer
      score:
        description: |-
          Score represents the calculated score of the audited manifest based on
          the number and severity of issues. It provides a quantitative measure
          of the security posture of the resources in the manifest.
        type: number
      severityStatistic:
        additionalProperties:
          type: integer
        description: |-
          SeverityStatistic is a mapping of severity levels to their respective
          number of occurrences. It allows for a quick overview of the distribution
          of issues across different severity categories.
        type: object
      severitySum:
        description: |-
          SeveritySum is the sum of severity scores of all issues, which can be
          used to gauge the cumulative severity of all problems found.
        type: integer
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_cluster.ClusterDetail:
    properties:
      cpucapacity:
        type: integer
      memoryCapacity:
        type: integer
      nodeCount:
        type: integer
      podsCapacity:
        type: integer
      serverVersion:
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_cluster.ClusterTopology:
    properties:
      count:
        type: integer
      groupVersionKind:
        type: string
      relationship:
        additionalProperties:
          type: string
        type: object
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_resource.Resource:
    properties:
      apiversion:
        type: string
      cluster:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceSummary:
    properties:
      creationTimestamp:
        type: string
      resource:
        $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_resource.Resource'
      resourceVersion:
        type: string
      uid:
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceTopology:
    properties:
      children:
        items:
          type: string
        type: array
      identifier:
        type: string
      parents:
        items:
          type: string
        type: array
    type: object
  github_com_KusionStack_karbour_pkg_scanner.Issue:
    properties:
      message:
        description: Message provides a detailed human-readable description of the
          issue.
        type: string
      scanner:
        description: Scanner is the name of the scanner that discovered the issue.
        type: string
      severity:
        allOf:
        - $ref: '#/definitions/github_com_KusionStack_karbour_pkg_scanner.IssueSeverityLevel'
        description: Severity indicates how critical the issue is, using the IssueSeverityLevel
          constants.
      title:
        description: Title is a brief summary of the issue.
        type: string
    type: object
  github_com_KusionStack_karbour_pkg_scanner.IssueSeverityLevel:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 5
    type: integer
    x-enum-comments:
      Critical: Critical indicates an extremely serious issue that must be addressed
        immediately.
      High: High indicates a serious issue that has a significant impact.
      Low: Low indicates a minor issue that should be addressed.
      Medium: Medium indicates a potential issue that may have a moderate impact.
      Safe: Safe indicates the absence of any security risk or an informational finding
        that does not require action.
    x-enum-varnames:
    - Safe
    - Low
    - Medium
    - High
    - Critical
  k8s_io_api_core_v1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  pkg_core_handler_audit.AuditPayload:
    properties:
      apiVersion:
        type: string
      cluster:
        type: string
      group:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    type: object
  pkg_core_handler_cluster.ClusterPayload:
    properties:
      description:
        description: ClusterDescription is the description of cluster to be created
        type: string
      displayName:
        description: ClusterDisplayName is the display name of cluster to be created
        type: string
      kubeconfig:
        description: ClusterKubeConfig is the kubeconfig of cluster to be created
        type: string
      name:
        description: ClusterName is the name of cluster to be created
        type: string
    type: object
  pkg_core_handler_cluster.UploadData:
    properties:
      content:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
    type: object
  pkg_core_handler_cluster.ValidatePayload:
    properties:
      kubeConfig:
        type: string
    type: object
  unstructured.Unstructured:
    properties:
      object:
        additionalProperties: true
        description: |-
          Object is a JSON compatible map with string, float, int, bool, []interface{}, or
          map[string]interface{}
          children.
        type: object
    type: object
  v1.FieldsV1:
    type: object
  v1.FinalizerName:
    enum:
    - kubernetes
    type: string
    x-enum-varnames:
    - FinalizerKubernetes
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        allOf:
        - $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        allOf:
        - $ref: '#/definitions/v1.ManagedFieldsOperationType'
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is the timestamp of when the ManagedFields entry was added. The
          timestamp will also be updated if a field is added, the manager
          changes any of the owned fields value or removes a field. The
          timestamp does not update when a field is removed from the entry
          because another manager took it over.
          +optional
        type: string
    type: object
  v1.ManagedFieldsOperationType:
    enum:
    - Apply
    - Update
    type: string
    x-enum-varnames:
    - ManagedFieldsOperationApply
    - ManagedFieldsOperationUpdate
  v1.Namespace:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.NamespaceSpec'
        description: |-
          Spec defines the behavior of the Namespace.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
      status:
        allOf:
        - $ref: '#/definitions/v1.NamespaceStatus'
        description: |-
          Status describes the current status of a Namespace.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
    type: object
  v1.NamespaceCondition:
    properties:
      lastTransitionTime:
        description: +optional
        type: string
      message:
        description: +optional
        type: string
      reason:
        description: +optional
        type: string
      status:
        allOf:
        - $ref: '#/definitions/k8s_io_api_core_v1.ConditionStatus'
        description: Status of the condition, one of True, False, Unknown.
      type:
        allOf:
        - $ref: '#/definitions/v1.NamespaceConditionType'
        description: Type of namespace controller condition.
    type: object
  v1.NamespaceConditionType:
    enum:
    - NamespaceDeletionDiscoveryFailure
    - NamespaceDeletionContentFailure
    - NamespaceDeletionGroupVersionParsingFailure
    - NamespaceContentRemaining
    - NamespaceFinalizersRemaining
    type: string
    x-enum-varnames:
    - NamespaceDeletionDiscoveryFailure
    - NamespaceDeletionContentFailure
    - NamespaceDeletionGVParsingFailure
    - NamespaceContentRemaining
    - NamespaceFinalizersRemaining
  v1.NamespacePhase:
    enum:
    - Active
    - Terminating
    type: string
    x-enum-varnames:
    - NamespaceActive
    - NamespaceTerminating
  v1.NamespaceSpec:
    properties:
      finalizers:
        description: |-
          Finalizers is an opaque list of values that must be empty to permanently remove object from storage.
          More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
          +optional
        items:
          $ref: '#/definitions/v1.FinalizerName'
        type: array
    type: object
  v1.NamespaceStatus:
    properties:
      conditions:
        description: |-
          Represents the latest available observations of a namespace's current state.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.NamespaceCondition'
        type: array
      phase:
        allOf:
        - $ref: '#/definitions/v1.NamespacePhase'
        description: |-
          Phase is the current lifecycle phase of the namespace.
          More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
          +optional
    type: object
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
          for how the garbage collector interacts with this field and enforces the foreground deletion.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/audit:
    post:
      consumes:
      - application/json
      description: This endpoint audits based on the specified locator.
      parameters:
      - description: Locator for perform the audit
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_audit.AuditPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Audit results
          schema:
            items:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_audit.AuditData'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Audit based on locator.
      tags:
      - audit
  /api/v1/audit/manifest:
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint audits the provided manifest for issues.
      parameters:
      - description: Manifest data to audit (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_audit.AuditPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Audit results
          schema:
            items:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_scanner.Issue'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: AuditManifest audits the provided manifest.
      tags:
      - audit
  /api/v1/audit/score:
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint calculates a score for the provided manifest based
        on the number and severity of issues detected during the audit.
      parameters:
      - description: Manifest data to calculate score for (either plain text or JSON
          format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_audit.AuditPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Score calculation result
          schema:
            $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_audit.ScoreData'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: ScoreHandler calculates a score for the audited manifest.
      tags:
      - audit
  /api/v1/cluster:
    get:
      description: This endpoint lists all cluster resources.
      produces:
      - application/json
      responses:
        "200":
          description: List of cluster objects
          schema:
            items:
              $ref: '#/definitions/unstructured.Unstructured'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List lists all cluster resources.
      tags:
      - cluster
    post:
      consumes:
      - text/plain
      - application/json
      description: This endpoint creates a new cluster resource using the payload.
      parameters:
      - description: cluster to create (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ClusterPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create creates a cluster resource.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}:
    delete:
      description: This endpoint deletes the cluster resource by name.
      produces:
      - application/json
      responses:
        "200":
          description: Operation status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete removes a cluster resource by name.
      tags:
      - cluster
    get:
      description: This endpoint returns a cluster resource by name.
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a cluster resource by name.
      tags:
      - cluster
    put:
      consumes:
      - text/plain
      - application/json
      description: This endpoint updates the display name and description of an existing
        cluster resource.
      parameters:
      - description: cluster to update (either plain text or JSON format)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ClusterPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: UpdateMetadata updates the cluster metadata by name.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}/detail:
    get:
      description: This endpoint returns the details of a cluster by name.
      produces:
      - application/json
      responses:
        "200":
          description: Cluster detail
          schema:
            $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_cluster.ClusterDetail'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetDetail returns the details of a cluster by name.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}/namespace/{namespaceName}:
    get:
      description: This endpoint returns the namespace by name.
      produces:
      - application/json
      responses:
        "200":
          description: v1.Namespace
          schema:
            $ref: '#/definitions/v1.Namespace'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetNamespace returns the namespace by name.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}/namespace/{namespaceName}/topology:
    get:
      description: This endpoint returns the the topology of a namespace by name.
      produces:
      - application/json
      responses:
        "200":
          description: map from string to cluster.ClusterTopology
          schema:
            additionalProperties:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_cluster.ClusterTopology'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetNamespaceTopology returns the topology of a namespace by name.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}/topology:
    get:
      description: This endpoint returns the topology of a cluster by name.
      produces:
      - application/json
      responses:
        "200":
          description: map from string to cluster.ClusterTopology
          schema:
            additionalProperties:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_cluster.ClusterTopology'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetTopology returns the topology of a cluster by name.
      tags:
      - cluster
  /api/v1/cluster/{clusterName}/yaml:
    get:
      description: This endpoint returns a cluster YAML by name.
      produces:
      - application/json
      responses:
        "200":
          description: Byte array
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetYAML returns a cluster YAML by name.
      tags:
      - cluster
  /api/v1/cluster/config/file:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a KubeConfig file for cluster, with a maximum size of 2MB,
        and the valid file extension is "", ".yaml", ".yml", ".json", ".kubeconfig",
        ".kubeconf".
      parameters:
      - description: Upload file with field name 'file'
        in: formData
        name: file
        required: true
        type: file
      produces:
      - text/plain
      responses:
        "200":
          description: Returns the content of the uploaded KubeConfig file.
          schema:
            $ref: '#/definitions/pkg_core_handler_cluster.UploadData'
        "400":
          description: The uploaded file is too large or the request is invalid.
          schema:
            type: string
        "500":
          description: Internal server error.
          schema:
            type: string
      summary: Upload kubeConfig file for cluster
      tags:
      - cluster
  /api/v1/cluster/config/validate:
    post:
      consumes:
      - text/plain
      - application/json
      description: Validates the provided KubeConfig using cluster manager methods.
      parameters:
      - description: KubeConfig payload to validate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_core_handler_cluster.ValidatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Verification passed server version
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Validate KubeConfig
      tags:
      - cluster
  /api/v1/resource/cluster/{clusterName}/{apiVersion}/namespace/{namespaceName}/{kind}/name/{resourceName}/:
    get:
      description: This endpoint returns a Kubernetes resource by name, namespace,
        cluster, apiVersion and kind.
      produces:
      - application/json
      responses:
        "200":
          description: Unstructured object
          schema:
            $ref: '#/definitions/unstructured.Unstructured'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a Kubernetes resource by name, namespace, cluster, apiVersion
        and kind.
      tags:
      - resource
  /api/v1/resource/cluster/{clusterName}/{apiVersion}/namespace/{namespaceName}/{kind}/name/{resourceName}/summary:
    get:
      description: This endpoint returns a Kubernetes resource summary by name, namespace,
        cluster, apiVersion and kind.
      produces:
      - application/json
      responses:
        "200":
          description: Resource Summary
          schema:
            $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceSummary'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get returns a Kubernetes resource summary by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - resource
  /api/v1/resource/cluster/{clusterName}/{apiVersion}/namespace/{namespaceName}/{kind}/name/{resourceName}/topology:
    get:
      description: This endpoint returns a topology map for a Kubernetes resource
        by name, namespace, cluster, apiVersion and kind.
      produces:
      - application/json
      responses:
        "200":
          description: map from string to resource.ResourceTopology
          schema:
            additionalProperties:
              $ref: '#/definitions/github_com_KusionStack_karbour_pkg_core_manager_resource.ResourceTopology'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetTopology returns a topology map for a Kubernetes resource by name,
        namespace, cluster, apiVersion and kind.
      tags:
      - resource
  /api/v1/resource/cluster/{clusterName}/{apiVersion}/namespace/{namespaceName}/{kind}/name/{resourceName}/yaml:
    get:
      description: This endpoint returns a Kubernetes resource YAML by name, namespace,
        cluster, apiVersion and kind.
      produces:
      - application/json
      responses:
        "200":
          description: Byte array
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetYAML returns a Kubernetes resource YAML by name, namespace, cluster,
        apiVersion and kind.
      tags:
      - resource
  /api/v1/resource/search:
    get:
      description: This endpoint returns an array of Kubernetes runtime Object matched
        using the query from context.
      produces:
      - application/json
      responses:
        "200":
          description: Array of runtime.Object
          schema:
            items: {}
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "405":
          description: Method Not Allowed
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: SearchForResource returns an array of Kubernetes runtime Object matched
        using the query from context.
      tags:
      - resource
swagger: "2.0"
