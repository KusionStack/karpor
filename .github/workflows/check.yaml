# Reference from:
# https://github.com/c-bata/go-prompt/blob/master/.github/workflows/test.yml
name: Check
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
jobs:
  Test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - run: go build ./...
      - run: go vet ./...

      - name: Running go tests with coverage
        env:
          GO111MODULE: on
        run: make cover
      # - name: Send coverage
      #   uses: shogo82148/actions-goveralls@v1
      #   with:
      #     path-to-profile: coverage.out

  GolangLint:
    name: Golang Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.52.2

  LicenseCheck:
    name: License Check
    runs-on: ubuntu-latest
    env:
      TERM: xterm
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: apache/skywalking-eyes@main

  # The TruffleHog OSS Github Action can be used to scan a range of commits for leaked credentials. The action will fail if any results are found.
  # More see: https://github.com/marketplace/actions/trufflehog-oss
  # SecretScan:
  #   name: Secret Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: TruffleHog OSS
  #       uses: trufflesecurity/trufflehog@main
  #       with:
  #         path: ./
  #         base: ${{ github.event.repository.default_branch }}
  #         head: HEAD
  #         extra_args: --debug --json

  # TODO: Uncomment when the repository is publicly.
  # DependencyReview:
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #   name: Dependency Review
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/dependency-review-action@v3
  #       with:
  #         fail-on-severity: critical
