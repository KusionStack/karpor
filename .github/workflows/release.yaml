# Reference from:
# https://goreleaser.com/ci/actions/
name: Release
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  Test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - run: go build ./...
      - run: go vet ./...

      - name: Running go tests with coverage
        env:
          GO111MODULE: on
        run: make cover

  GolangLint:
    name: Golang Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.52.2

  # Lints Pull Request commits with commitlint.
  #
  # Rules can be referenced: 
  # https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional
  CommitLint:
    name: Commit Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5

  # Release the artifacts, release note and images.
  Release: 
    runs-on: ubuntu-latest
    needs: [Test, GolangLint, CommitLint]
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - 
        name: Check if on tag
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" != "$GITHUB_REF" ]]; then
            echo "Running on tag ${GITHUB_REF#refs/tags/}"
          else
            echo "Not running on a tag"
          fi
      - 
        name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Release the karbour-dashboard
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: kusionstack/karbour-dashboard:${{ steps.get_version.outputs.VERSION }}
          context: ui
      - 
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - 
        name: Release the karbour with GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
